{"version":3,"sources":["components/ContactForm/ContactForm.module.css","transitions/popTransition.module.css","components/SectionTitle/SectionTitle.module.css","transitions/logoTransition.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/DeleteBtn/DeleteBtn.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","transitions/slideTransition.module.css","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/DeleteBtn/DeleteBtn.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Phonebook/Phonebook.jsx","index.jsx"],"names":["module","exports","SectionTitle","state","isLogoShow","this","setState","props","title","isLogo","className","style","background","CSSTransition","in","timeout","classNames","logoTransition","Component","initialState","name","number","ContactForm","handleSubmit","e","preventDefault","onAddContact","handleChange","target","value","onSubmit","styles","form","input","type","onChange","placeholder","autoComplete","btn","disabled","DeleteBtn","onDelete","onClick","ContactListItem","listItem","ContactList","contacts","listItems","map","id","key","popTransition","unmountOnExit","TransitionGroup","component","list","Filter","onFilter","isShow","Notification","text","slideTransition","alert","Phonebook","filter","isAlertShow","isUniqueName","some","el","contact","newContact","uniqid","setTimeout","handleFilter","handleDelete","filterContactsByName","toLowerCase","includes","sortContactsAlphabetically","sort","a","b","contactsLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filtredContacts","sortedContacts","console","log","length","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.77d9d23d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__L-e_n\",\"input\":\"ContactForm_input__3Z4vx\",\"btn\":\"ContactForm_btn__1UQAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"popTransition_enter__38xzq\",\"enterActive\":\"popTransition_enterActive__kgQvi\",\"exit\":\"popTransition_exit__LNOiR\",\"exitActive\":\"popTransition_exitActive__1i8Bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"SectionTitle_background__20Keg\",\"title\":\"SectionTitle_title__38XC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logoTransition_enter__3R8cj\",\"enterActive\":\"logoTransition_enterActive__3Yric\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Scmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3rP8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"DeleteBtn_btn__1owOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3OdRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__X3usD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__3eWYn\",\"enterActive\":\"slideTransition_enterActive__pBP4k\",\"exit\":\"slideTransition_exit__3zoOo\",\"exitActive\":\"slideTransition_exitActive__mKc-E\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./SectionTitle.module.css\";\r\nimport logoTransition from \"../../transitions/logoTransition.module.css\";\r\n\r\nclass SectionTitle extends Component {\r\n  state = {\r\n    isLogoShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState((state) => ({ isLogoShow: !state.isLogoShow }));\r\n  }\r\n\r\n  render() {\r\n    const { isLogoShow } = this.state;\r\n    const { title, isLogo } = this.props;\r\n\r\n    return (\r\n      <div className={style.background}>\r\n        {isLogo ? (\r\n          <CSSTransition\r\n            in={isLogoShow}\r\n            timeout={500}\r\n            classNames={logoTransition}\r\n          >\r\n            <h2 className={style.title}>{title}</h2>\r\n          </CSSTransition>\r\n        ) : (\r\n          <h2 className={style.title}>{title}</h2>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isLogo: PropTypes.bool,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst initialState = { name: \"\", number: \"\" };\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const name = target.name;\r\n    let value = target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <input\r\n          className={styles.input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Number\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <button\r\n          className={styles.btn}\r\n          type=\"submit\"\r\n          disabled={!name || !number}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./DeleteBtn.module.css\";\r\n\r\nconst DeleteBtn = ({ onDelete }) => {\r\n  return (\r\n    <button className={styles.btn} onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nDeleteBtn.propTypes = {\r\n  id: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => (\r\n  <li className={styles.listItem}>\r\n    {name}: {number}\r\n    <DeleteBtn onDelete={onDelete} />\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts = [], onDelete }) => {\r\n  const listItems = contacts.map(({ id, name, number }) => {\r\n    return (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDelete(id)}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {listItems}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Filter = ({ value, onFilter, isShow }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isShow}\r\n      timeout={250}\r\n      classNames={popTransition}\r\n      unmountOnExit\r\n    >\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onFilter}\r\n        value={value}\r\n        placeholder=\"Find contact by name\"\r\n      />\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Notification.module.css\";\r\nimport slideTransition from \"../../transitions/slideTransition.module.css\";\r\n\r\nconst Notification = ({ text, isShow }) => (\r\n  <CSSTransition\r\n    in={isShow}\r\n    timeout={250}\r\n    classNames={slideTransition}\r\n    unmountOnExit\r\n  >\r\n    <div className={style.alert}>\r\n      <p>{text}</p>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\n\r\nimport uniqid from \"uniqid\";\r\n\r\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n    isAlertShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n\r\n    if (contactsLS) {\r\n      const contacts = JSON.parse(contactsLS);\r\n\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  isUniqueName = ({ name }) => {\r\n    return !this.state.contacts.some((el) => el.name === name);\r\n  };\r\n\r\n  handleSubmit = (contact) => {\r\n    if (this.isUniqueName(contact)) {\r\n      const newContact = { id: uniqid(), ...contact };\r\n\r\n      this.setState((state) => ({\r\n        contacts: [...state.contacts, newContact],\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n\r\n      setTimeout(() => {\r\n        this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState((state) => ({\r\n      contacts: state.contacts.filter((el) => el.id !== id),\r\n    }));\r\n  };\r\n\r\n  filterContactsByName = (contacts, filter) =>\r\n    contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n\r\n  sortContactsAlphabetically = (contacts) => {\r\n    const sortedArr = [...contacts];\r\n\r\n    return sortedArr.sort((a, b) => {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name < b.name) return 1;\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, isAlertShow } = this.state;\r\n    const filtredContacts = this.filterContactsByName(contacts, filter);\r\n    const sortedContacts = this.sortContactsAlphabetically(contacts);\r\n    console.log(contacts);\r\n    return (\r\n      <div>\r\n        <SectionTitle title={\"Phonebook\"} isLogo />\r\n\r\n        <ContactForm onAddContact={this.handleSubmit} />\r\n\r\n        <SectionTitle title={\"Contacts\"} />\r\n\r\n        <Filter\r\n          onFilter={this.handleFilter}\r\n          value={filter}\r\n          isShow={contacts.length >= 2}\r\n        />\r\n\r\n        <ContactList\r\n          contacts={filter.length ? filtredContacts : sortedContacts}\r\n          onDelete={this.handleDelete}\r\n        />\r\n\r\n        <Notification isShow={isAlertShow} text=\"Contact is already exist\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Phonebook from \"./components/Phonebook/Phonebook\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <Phonebook />;\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}